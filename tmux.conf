# guide for some cosmetics 
# https://cassidy.codes/blog/2019-08-03-tmux-colour-theme/

# was recommended by :checkhealth
set-option -g focus-events on

bind-key C-b last-window

bind -n C-S-h select-window -t :-
bind -n C-S-l select-window -t :+

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Rename window to the current directory name
bind-key R rename-window "#{b:pane_current_path}"

# Move panes between existing windows.
bind-key m command-prompt -p "Move to window (e.g. 3.1): #"  "join-pane -h -t '%%'"
bind-key M command-prompt -p "Move to session (e.g. main:3): #"  "move-pane -t '%%'"

# Renumber windows when one of them is closed
set-option -g renumber-windows on

# Correct the TERM variable required by neovim:
# https://github.com/neovim/neovim/wiki/FAQ#home-or-some-other-special-key-doesnt-work
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set -g default-terminal "tmux-256color"
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# bind -n -> bind -T root or sth like this
bind -n C-M-j split-window -v -c "#{pane_current_path}"
bind -n C-M-k split-window -v -b -c "#{pane_current_path}"
bind -n C-M-h split-window -h -b -c "#{pane_current_path}"
bind -n C-M-l split-window -h -c "#{pane_current_path}"

unbind '"'
unbind %

bind -n M-J select-pane -U
bind -n M-K select-pane -D
bind -n M-H select-pane -L
bind -n M-L select-pane -R

bind -n C-q kill-pane 
bind -n C-n new-window -c "#{pane_current_path}"

set -g history-limit 10000

# mouse support (for scrolling)
set-option -g mouse on

# # {{{ Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#   # | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# # }}}

# Vim-style in copy-mode
# bind-key Escape copy-mode
bind-key v copy-mode
bind-key -T copy-mode-vi Escape send -X cancel
# bind-key p paste-buffer
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi r send -X rectangle-toggle

bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# don't rename windows automatically
# set-option -g allow-rename off
# Automatically set window title
set-window-option -g automatic-rename on 
set-option -g set-titles on 

# No delay for escape key press
set -sg escape-time 0

# # THEME
 source-file "${HOME}/.tmux-themepack/powerline/double/magenta.tmuxtheme"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'jimeh/tmux-themepack'

set -g @themepack 'powerline/double/magenta'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# vim: foldmethod=marker sw=4
